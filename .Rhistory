on.exit(unlink(zfile))
switch(ext, R = , r = {
library("utils")
sys.source(zfile, chdir = TRUE, envir = envir)
}, RData = , rdata = , rda = load(zfile,
envir = envir), TXT = , txt = , tab = ,
tab.gz = , tab.bz2 = , tab.xz = , txt.gz = ,
txt.bz2 = , txt.xz = assign(name, read.table(zfile,
header = TRUE, as.is = FALSE), envir = envir),
CSV = , csv = , csv.gz = , csv.bz2 = ,
csv.xz = assign(name, read.table(zfile,
header = TRUE, sep = ";", as.is = FALSE),
envir = envir), found <- FALSE)
}
if (found)
break
}
if (verbose)
message(if (!found)
"*NOT* ", "found", domain = NA)
}
if (found)
break
}
if (!found)
warning(gettextf("data set %s not found", sQuote(name)),
domain = NA)
}
invisible(names)
}
# import data from csv
data = read.csv("A:\\University\\Semester_2\\Database\\Project\\Crime2_-_2017.csv")
# remove all the lines with NA
data.clean = na.omit(data)
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
# draw legend
legend("topright",names(summary_primaryType),cex=0.8,fill=rainbow(length(summary_primaryType)))
# get summary of community area
summary_communityArea = table(data.clean$Community.Area)
# sort areas according to number of crimes
summary_communityArea = sort(summary_communityArea,decreasing = TRUE)
# get the 20 areas with most number of cimes
summary_communityArea = summary_communityArea[1:20]
barplot(height = summary_communityArea, names.arg = names(summary_communityArea),xlab = "Area Code",ylab = "Number of Crimes",main="Crimes for Each Area",col="yellow")
# get arrest rate for different type of crimes
arrest_type_true = rep(0,10)
arrest_type_true_percentage = rep(0,10)
for(i in 1:10){
arrest_type_true[i] = dim(data.clean[data.clean$Arrest == "true" & data.clean$Primary.Type == names(summary_primaryType[i]),])[1]
arrest_type_true_percentage[i] = paste(round(arrest_type_true[i]*100 / summary_primaryType[i],2),"%")
}
# draw pie chart
pie(arrest_type_true,arrest_type_true_percentage,col=rainbow((length(arrest_type_true))),main = "Arrest rate for different type of crimes")
# draw legend
legend("topright",names(summary_primaryType),cex=0.8,fill=rainbow(length(arrest_type_true)))
source('A:/University/Semester_2/Database/Project/project.R')
# import data from csv
data = read.csv("A:\\University\\Semester_2\\Database\\Project\\Crime2_-_2017.csv")
# import data from csv
data = read.csv("Crime2_-_2017.csv")
# import data from csv
data = read.csv("Crimes_-_2017.csv")
# remove all the lines with NA
data.clean = na.omit(data)
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
# draw legend
legend("topright",names(summary_primaryType),cex=0.8,fill=rainbow(length(summary_primaryType)))
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
# draw legend
legend("topright",names(summary_primaryType),cex=0.8,fill=rainbow(length(summary_primaryType)))
# draw legend
legend("topright",names(summary_primaryType),cex=0.9,fill=rainbow(length(summary_primaryType)))
# draw legend
legend("topright",names(summary_primaryType),cex=0.5,fill=rainbow(length(summary_primaryType)))
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
# draw legend
legend("topright",names(summary_primaryType),cex=0.5,fill=rainbow(length(summary_primaryType)))
# remove all the lines with NA
data.clean = na.omit(data)
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
# draw legend
legend("topright",names(summary_primaryType),cex=0.5,fill=rainbow(length(summary_primaryType)))
# calculate the percentage of each category
piepercent = paste(round(150*summary_primaryType/sum(summary_primaryType),2),"%")
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),1),"%")
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),1),"%")
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 1)
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
View(data.clean)
head
head(data.clean)
crime_types <- read.csv("crimes2017.csv")
head(crime_types)
plot(
x=crime_types$Primary.Type,
main="Crime Visualisation",
xlab="catogery of crime",
ylab="Count of the crime")
dotchart()
dotcahrt(
x=crime_types$Primary,
pch=16,
main="Crime Visualisation",
xlab="catogery of crime",
ylab="Count of the crime"
)
dotchart(
x=crime_types$Primary,
pch=16,
main="Crime Visualisation",
xlab="catogery of crime",
ylab="Count of the crime"
)
dotchart(
x=crime_types$Primary.Type,
pch=16,
main="Crime Visualisation",
xlab="catogery of crime",
ylab="Count of the crime"
)
dotchart(
x=table(crime_types$Primary.Type),
pch=16,
main="Crime Visualisation",
xlab="catogery of crime",
ylab="Count of the crime"
)
dotchart(
y=table(crime_types$Primary.Type),
pch=16,
main="Crime Visualisation",
xlab="catogery of crime",
ylab="Count of the crime"
)
dotchart(
x=table(crime_types$Primary.Type),
pch=16,
main="Crime Visualisation",
ylab="category of crime",
xlab="Count of the crime"
)
dotchart(
x=table(crime_types$Primary.Type),
main="Crime Visualisation",
ylab="category of crime",
xlab="Count of the crime"
)
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
# remove all the lines with NA
data.clean = na.omit(data)
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
View(data.clean)
# import data from csv
data = read.csv("crimes2017.csv")
# remove all the lines with NA
data.clean = na.omit(data)
# get summary of the field primary type
summary_primaryType = summary(data.clean$Primary.Type,maxsum = 10)
# calculate the percentage of each category
piepercent = paste(round(100*summary_primaryType/sum(summary_primaryType),2),"%")
# draw pie chart
pie(summary_primaryType,piepercent,col=rainbow((length(summary_primaryType))),main = "Distribution of Primary Type of Crimes")
summary_communityArea = table(data.clean$Community.Area)
summary_communityArea
summary_communityArea[1]
names(summary_communityArea[1])
dotchart(
x=table(crime_types$Primary.Type),
main="Crime Visualisation",
ylab="category of crime",
xlab="Count of the crime"
)
primtype = crime_types$Primary.Type
primtype=primetype[1:5]
primtype=primtype[1:5]
primtype
summary_communityArea
primtype = table(crime_types$Primary.Type)
primtype=primtype[1:5]
primtype
primtype = table(crime_types$Primary.Type)
primtype=primtype[1:10]
primtype
areas = table(data.clean$Community.Area)
areas = areas[1:5]
areas
primtype = table(crime_types$Primary.Type)
primtype=primtype[1:10]
primtype
areas = table(data.clean$Community.Area)
areas = areas[1:5]
dotchart(
x=areas,
labels=row.names(x),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=areas,
labels=row.names(primtype),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
x <- mtcars[order(mtcars$mpg),] # sort by mpg
x$cyl <- factor(x$cyl) # it must be a factor
x$color[x$cyl==4] <- "red"
x$color[x$cyl==6] <- "blue"
x$color[x$cyl==8] <- "darkgreen"
dotchart(x$mpg,labels=row.names(x),cex=.7,groups= x$cyl,
main="Gas Milage for Car Models\ngrouped by cylinder",
xlab="Miles Per Gallon", gcolor="black", color=x$color)
x
x$mpg
x$cyl
row.names(x)
mtcars
dotchart(
areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
x$cyl
typeof(x$cyl)
mtcars[order(mtcars$mpg),]
mtcars[order(mtcars$mpg),]$cyl
typeof(mtcars[order(mtcars$mpg),]$cyl)
primtype <- table(crime_types$Primary.Type)
areas = factor(areas)
areas = table(data.clean$Community.Area)
areas = areas[1:5]
areas = factor(areas)
dotchart(
areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
areas <- table(data.clean$Community.Area)
areas <- areas[1:5]
areas <- factor(areas)
dotchart(
x=areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
primtype <- table(crime_types$Primary.Type)
primtype<-primtype[1:10]
primetype <- facor(primetype)
primetype <- factor(primetype)
primtype <- factor(primtype)
primtype
areas <- table(data.clean$Community.Area)
areas <- areas[1:5]
areas <- factor(areas)
dotchart(
x=areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=areas,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=areas,
ylab="Simple",
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=table(areas),
ylab="Simple",
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=table(areas),
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=table(names(areas)),
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
areas
areas = table(data.clean$Community.Area)
areas = areas[1:5]
areas
data.clean <- data.clean
data.clean2 <- data.clean
data.clean2 <- data.clean[data.clean$Community.Area %in% areas,]
data.clean2 <- data.clean[data.clean$Community.Area %in% names(areas),]
areas = areas[1:5]
areas
dotchart(
x=areas,
labels=row.names(areas),
groups=primtype,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=areas,
labels=row.names(areas),
groups=areas,
xlab="Counts of Crimes",
pch=16
)
data.clean2 = data.clean[data.clean$Community.Area %in% names(areas),]
data.clean2 = data.clean[data.clean$Primary.Type %in% names(primtype),]
primtype
primtype = primtype[1:5]
primtype
dotchart(
primetype,
labels=,
groups=areas,
xlab="Counts of Crimes",
pch=16
)
dotchart(
primtype,
labels=,
groups=areas,
xlab="Counts of Crimes",
pch=16
)
primtype = factor(primtype)
dotchart(
primtype,
labels=,
groups=areas,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=primtype,
labels=,
groups=areas,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=primtype,
labels=row.names(areas),
groups=areas,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=primtype,
labels=row.names(primtype),
groups=names(areas),
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=table(primtype),
labels=row.names(primtype),
groups=names(areas),
xlab="Counts of Crimes",
pch=16
)
primtype
y_array = rep(0,15)
label_array = rep(0,15)
counter = 0
for (i in areas){
tmp = data.clean[data.clean$Community.Area == i,]
summary_tmp = summary(tmp$Primary.Type,maxsum=3)
for(j in seq(1:3)){
y_array[counter*3+j] = summary_tmp[j]
label_array[counter*3+j] = names(summary_tmp[j])
}
counter = counter + 1
}
y_area
y_array
areas = (1:5)
y_array = rep(0,15)
label_array = rep(0,15)
counter = 0
for (i in areas){
tmp = data.clean[data.clean$Community.Area == i,]
summary_tmp = summary(tmp$Primary.Type,maxsum=3)
for(j in seq(1:3)){
y_array[counter*3+j] = summary_tmp[j]
label_array[counter*3+j] = names(summary_tmp[j])
}
counter = counter + 1
}
y_array
y_arraylabel
label_array
dotchart(
x=y_array,
labels=label_array,
groups=names(areas),
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=y_array,
labels=label_array,
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=y_array,
labels=label_array,
groups = c(1,1,1,2,2,2,3,3,3,4,4,4,5,5,5)
xlab="Counts of Crimes",
pch=16
)
dotchart(
x=y_array,
labels=label_array,
groups = c(1,1,1,2,2,2,3,3,3,4,4,4,5,5,5),
xlab="Counts of Crimes",
pch=16
)
?
? dotchart
?dotchart
